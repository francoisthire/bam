Check tree returned by [Tree.binary_search]
Tree generated with [Tree.binary_search ~min=0 ~initial=0]

Check [Tree.dfs]
 0

Check [Tree.row 1]


Check [Tree.row 2]


Check [Tree.row 3]


Check [Tree.crunch 0 | Tree.row 0]
 0

Check [Tree.crunch 0 | Tree.row 1]


Check [Tree.crunch 1 | Tree.row 0]
 0

Check [Tree.crunch 1 | Tree.row 1]


Check [Tree.crunch 2 | Tree.dfs]
 0

Check [Tree.crunch 2 | Tree.row 1]


Shrink the tree with root 0 for predicate [always fail].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 0 for predicate [always fail].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 0 for predicate [always fail].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 0 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 0 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 0 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 0 for predicate [fail if 9].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 0 for predicate [fail if 9].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 0 for predicate [fail if 9].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 0 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 0 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 0 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
No smaller example found

Tree generated with [Tree.binary_search ~min=0 ~initial=1]

Check [Tree.dfs]
 1 0

Check [Tree.row 1]
 0

Check [Tree.row 2]


Check [Tree.row 3]


Check [Tree.crunch 0 | Tree.row 0]
 1

Check [Tree.crunch 0 | Tree.row 1]
 0

Check [Tree.crunch 1 | Tree.row 0]
 1

Check [Tree.crunch 1 | Tree.row 1]
 0

Check [Tree.crunch 2 | Tree.dfs]
 1 0

Check [Tree.crunch 2 | Tree.row 1]
 0

Shrink the tree with root 1 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 0

Shrink the tree with root 1 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 0

Shrink the tree with root 1 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 0

Shrink the tree with root 1 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 1 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 1 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 1 for predicate [fail if 9].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 1 for predicate [fail if 9].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 1 for predicate [fail if 9].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 1 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 1 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 1 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
No smaller example found

Tree generated with [Tree.binary_search ~min=0 ~initial=2]

Check [Tree.dfs]
 2 0 1

Check [Tree.row 1]
 0 1

Check [Tree.row 2]


Check [Tree.row 3]


Check [Tree.crunch 0 | Tree.row 0]
 2

Check [Tree.crunch 0 | Tree.row 1]
 0 1

Check [Tree.crunch 1 | Tree.row 0]
 2

Check [Tree.crunch 1 | Tree.row 1]
 0 1

Check [Tree.crunch 2 | Tree.dfs]
 2 0 1

Check [Tree.crunch 2 | Tree.row 1]
 0 1

Shrink the tree with root 2 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 0

Shrink the tree with root 2 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 0

Shrink the tree with root 2 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 0

Shrink the tree with root 2 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 2 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 2 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 2 for predicate [fail if 9].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 2 for predicate [fail if 9].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 2 for predicate [fail if 9].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 2 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 2 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 2 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
No smaller example found

Tree generated with [Tree.binary_search ~min=0 ~initial=5]

Check [Tree.dfs]
 5 0 1 2 4 3

Check [Tree.row 1]
 0 1 2 4

Check [Tree.row 2]
 3

Check [Tree.row 3]


Check [Tree.crunch 0 | Tree.row 0]
 5

Check [Tree.crunch 0 | Tree.row 1]
 0 1 2 4

Check [Tree.crunch 1 | Tree.row 0]
 5

Check [Tree.crunch 1 | Tree.row 1]
 0 1 2 3 4

Check [Tree.crunch 2 | Tree.dfs]
 5 0 1 2 3 4

Check [Tree.crunch 2 | Tree.row 1]
 0 1 2 3 4

Shrink the tree with root 5 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 0

Shrink the tree with root 5 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 0

Shrink the tree with root 5 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 0

Shrink the tree with root 5 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 5 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
Minimum example found: 3

Shrink the tree with root 5 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
Minimum example found: 3

Shrink the tree with root 5 for predicate [fail if 9].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 5 for predicate [fail if 9].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 5 for predicate [fail if 9].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 5 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 5 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 5 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
No smaller example found

Tree generated with [Tree.binary_search ~min=0 ~initial=8]

Check [Tree.dfs]
 8 0 1 2 4 3 7 5 6

Check [Tree.row 1]
 0 1 2 4 7

Check [Tree.row 2]
 3 5 6

Check [Tree.row 3]


Check [Tree.crunch 0 | Tree.row 0]
 8

Check [Tree.crunch 0 | Tree.row 1]
 0 1 2 4 7

Check [Tree.crunch 1 | Tree.row 0]
 8

Check [Tree.crunch 1 | Tree.row 1]
 0 1 2 3 4 5 6 7

Check [Tree.crunch 2 | Tree.dfs]
 8 0 1 2 3 4 5 6 7

Check [Tree.crunch 2 | Tree.row 1]
 0 1 2 3 4 5 6 7

Shrink the tree with root 8 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 0

Shrink the tree with root 8 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 0

Shrink the tree with root 8 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 0

Shrink the tree with root 8 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 8 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
Minimum example found: 3

Shrink the tree with root 8 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
Minimum example found: 3

Shrink the tree with root 8 for predicate [fail if 9].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 8 for predicate [fail if 9].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 8 for predicate [fail if 9].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 8 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 8 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 8 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
No smaller example found

Tree generated with [Tree.binary_search ~min=0 ~initial=10]

Check [Tree.dfs]
 10 0 1 2 4 3 8 5 6 7 9

Check [Tree.row 1]
 0 1 2 4 8 9

Check [Tree.row 2]
 3 5 6 7

Check [Tree.row 3]


Check [Tree.crunch 0 | Tree.row 0]
 10

Check [Tree.crunch 0 | Tree.row 1]
 0 1 2 4 8 9

Check [Tree.crunch 1 | Tree.row 0]
 10

Check [Tree.crunch 1 | Tree.row 1]
 0 1 2 3 4 5 6 7 8 9

Check [Tree.crunch 2 | Tree.dfs]
 10 0 1 2 3 4 5 6 7 8 9

Check [Tree.crunch 2 | Tree.row 1]
 0 1 2 3 4 5 6 7 8 9

Shrink the tree with root 10 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 0

Shrink the tree with root 10 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 0

Shrink the tree with root 10 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 0

Shrink the tree with root 10 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
Minimum example found: 9

Shrink the tree with root 10 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
Minimum example found: 3

Shrink the tree with root 10 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
Minimum example found: 3

Shrink the tree with root 10 for predicate [fail if 9].
Shrinking strategy used: default
Minimum example found: 9

Shrink the tree with root 10 for predicate [fail if 9].
Shrinking strategy used: crunch 2
Minimum example found: 9

Shrink the tree with root 10 for predicate [fail if 9].
Shrinking strategy used: crunch 3
Minimum example found: 9

Shrink the tree with root 10 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 10 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 10 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
No smaller example found

Tree generated with [Tree.binary_search ~min=0 ~initial=21]

Check [Tree.dfs]
 21 0 1 2 4 3 8 5 6 7 16 9 10 11 13 12 15 14 20 17 18 19

Check [Tree.row 1]
 0 1 2 4 8 16 20

Check [Tree.row 2]
 3 5 6 7 9 10 11 13 15 17 18 19

Check [Tree.row 3]
 12 14

Check [Tree.crunch 0 | Tree.row 0]
 21

Check [Tree.crunch 0 | Tree.row 1]
 0 1 2 4 8 16 20

Check [Tree.crunch 1 | Tree.row 0]
 21

Check [Tree.crunch 1 | Tree.row 1]
 0 1 2 3 4 5 6 7 8 9 10 11 13 15 16 17 18 19 20

Check [Tree.crunch 2 | Tree.dfs]
 21 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20

Check [Tree.crunch 2 | Tree.row 1]
 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20

Shrink the tree with root 21 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 0

Shrink the tree with root 21 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 0

Shrink the tree with root 21 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 0

Shrink the tree with root 21 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 21 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
Minimum example found: 3

Shrink the tree with root 21 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
Minimum example found: 3

Shrink the tree with root 21 for predicate [fail if 9].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 21 for predicate [fail if 9].
Shrinking strategy used: crunch 2
Minimum example found: 9

Shrink the tree with root 21 for predicate [fail if 9].
Shrinking strategy used: crunch 3
Minimum example found: 9

Shrink the tree with root 21 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
Minimum example found: 17

Shrink the tree with root 21 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
Minimum example found: 11

Shrink the tree with root 21 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
Minimum example found: 11

Tree generated with [Tree.binary_search ~min=0 ~initial=51]

Check [Tree.dfs]
 51 0 1 2 4 3 8 5 6 7 16 9 10 11 13 12 15 14 32 17 18 19 21 20 25 22 23 24 31 26 27 28 30 29 50 33 34 35 37 36 41 38 39 40 49 42 43 44 46 45 48 47

Check [Tree.row 1]
 0 1 2 4 8 16 32 50

Check [Tree.row 2]
 3 5 6 7 9 10 11 13 15 17 18 19 21 25 31 33 34 35 37 41 49

Check [Tree.row 3]
 12 14 20 22 23 24 26 27 28 30 36 38 39 40 42 43 44 46 48

Check [Tree.crunch 0 | Tree.row 0]
 51

Check [Tree.crunch 0 | Tree.row 1]
 0 1 2 4 8 16 32 50

Check [Tree.crunch 1 | Tree.row 0]
 51

Check [Tree.crunch 1 | Tree.row 1]
 0 1 2 3 4 5 6 7 8 9 10 11 13 15 16 17 18 19 21 25 31 32 33 34 35 37 41 49 50

Check [Tree.crunch 2 | Tree.dfs]
 51 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 30 29 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 45 48 47 49 50

Check [Tree.crunch 2 | Tree.row 1]
 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 48 49 50

Shrink the tree with root 51 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 0

Shrink the tree with root 51 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 0

Shrink the tree with root 51 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 0

Shrink the tree with root 51 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 51 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
Minimum example found: 3

Shrink the tree with root 51 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
Minimum example found: 3

Shrink the tree with root 51 for predicate [fail if 9].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 51 for predicate [fail if 9].
Shrinking strategy used: crunch 2
Minimum example found: 9

Shrink the tree with root 51 for predicate [fail if 9].
Shrinking strategy used: crunch 3
Minimum example found: 9

Shrink the tree with root 51 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
Minimum example found: 33

Shrink the tree with root 51 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
Minimum example found: 11

Shrink the tree with root 51 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
Minimum example found: 11

Tree generated with [Tree.binary_search ~min=1 ~initial=1]

Check [Tree.dfs]
 1

Check [Tree.row 1]


Check [Tree.row 2]


Check [Tree.row 3]


Check [Tree.crunch 0 | Tree.row 0]
 1

Check [Tree.crunch 0 | Tree.row 1]


Check [Tree.crunch 1 | Tree.row 0]
 1

Check [Tree.crunch 1 | Tree.row 1]


Check [Tree.crunch 2 | Tree.dfs]
 1

Check [Tree.crunch 2 | Tree.row 1]


Shrink the tree with root 1 for predicate [always fail].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 1 for predicate [always fail].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 1 for predicate [always fail].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 1 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 1 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 1 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 1 for predicate [fail if 9].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 1 for predicate [fail if 9].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 1 for predicate [fail if 9].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 1 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 1 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 1 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
No smaller example found

Tree generated with [Tree.binary_search ~min=1 ~initial=2]

Check [Tree.dfs]
 2 1

Check [Tree.row 1]
 1

Check [Tree.row 2]


Check [Tree.row 3]


Check [Tree.crunch 0 | Tree.row 0]
 2

Check [Tree.crunch 0 | Tree.row 1]
 1

Check [Tree.crunch 1 | Tree.row 0]
 2

Check [Tree.crunch 1 | Tree.row 1]
 1

Check [Tree.crunch 2 | Tree.dfs]
 2 1

Check [Tree.crunch 2 | Tree.row 1]
 1

Shrink the tree with root 2 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 1

Shrink the tree with root 2 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 1

Shrink the tree with root 2 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 1

Shrink the tree with root 2 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 2 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 2 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 2 for predicate [fail if 9].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 2 for predicate [fail if 9].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 2 for predicate [fail if 9].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 2 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 2 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 2 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
No smaller example found

Tree generated with [Tree.binary_search ~min=1 ~initial=5]

Check [Tree.dfs]
 5 1 2 3 4

Check [Tree.row 1]
 1 2 3 4

Check [Tree.row 2]


Check [Tree.row 3]


Check [Tree.crunch 0 | Tree.row 0]
 5

Check [Tree.crunch 0 | Tree.row 1]
 1 2 3 4

Check [Tree.crunch 1 | Tree.row 0]
 5

Check [Tree.crunch 1 | Tree.row 1]
 1 2 3 4

Check [Tree.crunch 2 | Tree.dfs]
 5 1 2 3 4

Check [Tree.crunch 2 | Tree.row 1]
 1 2 3 4

Shrink the tree with root 5 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 1

Shrink the tree with root 5 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 1

Shrink the tree with root 5 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 1

Shrink the tree with root 5 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
Minimum example found: 3

Shrink the tree with root 5 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
Minimum example found: 3

Shrink the tree with root 5 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
Minimum example found: 3

Shrink the tree with root 5 for predicate [fail if 9].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 5 for predicate [fail if 9].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 5 for predicate [fail if 9].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 5 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 5 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 5 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
No smaller example found

Tree generated with [Tree.binary_search ~min=1 ~initial=8]

Check [Tree.dfs]
 8 1 2 3 5 4 7 6

Check [Tree.row 1]
 1 2 3 5 7

Check [Tree.row 2]
 4 6

Check [Tree.row 3]


Check [Tree.crunch 0 | Tree.row 0]
 8

Check [Tree.crunch 0 | Tree.row 1]
 1 2 3 5 7

Check [Tree.crunch 1 | Tree.row 0]
 8

Check [Tree.crunch 1 | Tree.row 1]
 1 2 3 4 5 6 7

Check [Tree.crunch 2 | Tree.dfs]
 8 1 2 3 4 5 6 7

Check [Tree.crunch 2 | Tree.row 1]
 1 2 3 4 5 6 7

Shrink the tree with root 8 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 1

Shrink the tree with root 8 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 1

Shrink the tree with root 8 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 1

Shrink the tree with root 8 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
Minimum example found: 3

Shrink the tree with root 8 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
Minimum example found: 3

Shrink the tree with root 8 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
Minimum example found: 3

Shrink the tree with root 8 for predicate [fail if 9].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 8 for predicate [fail if 9].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 8 for predicate [fail if 9].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 8 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 8 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 8 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
No smaller example found

Tree generated with [Tree.binary_search ~min=1 ~initial=10]

Check [Tree.dfs]
 10 1 2 3 5 4 9 6 7 8

Check [Tree.row 1]
 1 2 3 5 9

Check [Tree.row 2]
 4 6 7 8

Check [Tree.row 3]


Check [Tree.crunch 0 | Tree.row 0]
 10

Check [Tree.crunch 0 | Tree.row 1]
 1 2 3 5 9

Check [Tree.crunch 1 | Tree.row 0]
 10

Check [Tree.crunch 1 | Tree.row 1]
 1 2 3 4 5 6 7 8 9

Check [Tree.crunch 2 | Tree.dfs]
 10 1 2 3 4 5 6 7 8 9

Check [Tree.crunch 2 | Tree.row 1]
 1 2 3 4 5 6 7 8 9

Shrink the tree with root 10 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 1

Shrink the tree with root 10 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 1

Shrink the tree with root 10 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 1

Shrink the tree with root 10 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
Minimum example found: 3

Shrink the tree with root 10 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
Minimum example found: 3

Shrink the tree with root 10 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
Minimum example found: 3

Shrink the tree with root 10 for predicate [fail if 9].
Shrinking strategy used: default
Minimum example found: 9

Shrink the tree with root 10 for predicate [fail if 9].
Shrinking strategy used: crunch 2
Minimum example found: 9

Shrink the tree with root 10 for predicate [fail if 9].
Shrinking strategy used: crunch 3
Minimum example found: 9

Shrink the tree with root 10 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 10 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 10 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
No smaller example found

Tree generated with [Tree.binary_search ~min=1 ~initial=21]

Check [Tree.dfs]
 21 1 2 3 5 4 9 6 7 8 17 10 11 12 14 13 16 15 20 18 19

Check [Tree.row 1]
 1 2 3 5 9 17 20

Check [Tree.row 2]
 4 6 7 8 10 11 12 14 16 18 19

Check [Tree.row 3]
 13 15

Check [Tree.crunch 0 | Tree.row 0]
 21

Check [Tree.crunch 0 | Tree.row 1]
 1 2 3 5 9 17 20

Check [Tree.crunch 1 | Tree.row 0]
 21

Check [Tree.crunch 1 | Tree.row 1]
 1 2 3 4 5 6 7 8 9 10 11 12 14 16 17 18 19 20

Check [Tree.crunch 2 | Tree.dfs]
 21 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20

Check [Tree.crunch 2 | Tree.row 1]
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20

Shrink the tree with root 21 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 1

Shrink the tree with root 21 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 1

Shrink the tree with root 21 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 1

Shrink the tree with root 21 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
Minimum example found: 3

Shrink the tree with root 21 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
Minimum example found: 3

Shrink the tree with root 21 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
Minimum example found: 3

Shrink the tree with root 21 for predicate [fail if 9].
Shrinking strategy used: default
Minimum example found: 9

Shrink the tree with root 21 for predicate [fail if 9].
Shrinking strategy used: crunch 2
Minimum example found: 9

Shrink the tree with root 21 for predicate [fail if 9].
Shrinking strategy used: crunch 3
Minimum example found: 9

Shrink the tree with root 21 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
Minimum example found: 11

Shrink the tree with root 21 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
Minimum example found: 11

Shrink the tree with root 21 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
Minimum example found: 11

Tree generated with [Tree.binary_search ~min=1 ~initial=51]

Check [Tree.dfs]
 51 1 2 3 5 4 9 6 7 8 17 10 11 12 14 13 16 15 33 18 19 20 22 21 26 23 24 25 32 27 28 29 31 30 50 34 35 36 38 37 42 39 40 41 49 43 44 45 47 46 48

Check [Tree.row 1]
 1 2 3 5 9 17 33 50

Check [Tree.row 2]
 4 6 7 8 10 11 12 14 16 18 19 20 22 26 32 34 35 36 38 42 49

Check [Tree.row 3]
 13 15 21 23 24 25 27 28 29 31 37 39 40 41 43 44 45 47 48

Check [Tree.crunch 0 | Tree.row 0]
 51

Check [Tree.crunch 0 | Tree.row 1]
 1 2 3 5 9 17 33 50

Check [Tree.crunch 1 | Tree.row 0]
 51

Check [Tree.crunch 1 | Tree.row 1]
 1 2 3 4 5 6 7 8 9 10 11 12 14 16 17 18 19 20 22 26 32 33 34 35 36 38 42 49 50

Check [Tree.crunch 2 | Tree.dfs]
 51 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 31 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 47 46 48 49 50

Check [Tree.crunch 2 | Tree.row 1]
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 47 48 49 50

Shrink the tree with root 51 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 1

Shrink the tree with root 51 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 1

Shrink the tree with root 51 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 1

Shrink the tree with root 51 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
Minimum example found: 3

Shrink the tree with root 51 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
Minimum example found: 3

Shrink the tree with root 51 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
Minimum example found: 3

Shrink the tree with root 51 for predicate [fail if 9].
Shrinking strategy used: default
Minimum example found: 9

Shrink the tree with root 51 for predicate [fail if 9].
Shrinking strategy used: crunch 2
Minimum example found: 9

Shrink the tree with root 51 for predicate [fail if 9].
Shrinking strategy used: crunch 3
Minimum example found: 9

Shrink the tree with root 51 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
Minimum example found: 11

Shrink the tree with root 51 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
Minimum example found: 11

Shrink the tree with root 51 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
Minimum example found: 11

Tree generated with [Tree.binary_search ~min=2 ~initial=2]

Check [Tree.dfs]
 2

Check [Tree.row 1]


Check [Tree.row 2]


Check [Tree.row 3]


Check [Tree.crunch 0 | Tree.row 0]
 2

Check [Tree.crunch 0 | Tree.row 1]


Check [Tree.crunch 1 | Tree.row 0]
 2

Check [Tree.crunch 1 | Tree.row 1]


Check [Tree.crunch 2 | Tree.dfs]
 2

Check [Tree.crunch 2 | Tree.row 1]


Shrink the tree with root 2 for predicate [always fail].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 2 for predicate [always fail].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 2 for predicate [always fail].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 2 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 2 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 2 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 2 for predicate [fail if 9].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 2 for predicate [fail if 9].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 2 for predicate [fail if 9].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 2 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 2 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 2 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
No smaller example found

Tree generated with [Tree.binary_search ~min=2 ~initial=5]

Check [Tree.dfs]
 5 2 3 4

Check [Tree.row 1]
 2 3 4

Check [Tree.row 2]


Check [Tree.row 3]


Check [Tree.crunch 0 | Tree.row 0]
 5

Check [Tree.crunch 0 | Tree.row 1]
 2 3 4

Check [Tree.crunch 1 | Tree.row 0]
 5

Check [Tree.crunch 1 | Tree.row 1]
 2 3 4

Check [Tree.crunch 2 | Tree.dfs]
 5 2 3 4

Check [Tree.crunch 2 | Tree.row 1]
 2 3 4

Shrink the tree with root 5 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 2

Shrink the tree with root 5 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 2

Shrink the tree with root 5 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 2

Shrink the tree with root 5 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
Minimum example found: 3

Shrink the tree with root 5 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
Minimum example found: 3

Shrink the tree with root 5 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
Minimum example found: 3

Shrink the tree with root 5 for predicate [fail if 9].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 5 for predicate [fail if 9].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 5 for predicate [fail if 9].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 5 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 5 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 5 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
No smaller example found

Tree generated with [Tree.binary_search ~min=2 ~initial=8]

Check [Tree.dfs]
 8 2 3 4 6 5 7

Check [Tree.row 1]
 2 3 4 6 7

Check [Tree.row 2]
 5

Check [Tree.row 3]


Check [Tree.crunch 0 | Tree.row 0]
 8

Check [Tree.crunch 0 | Tree.row 1]
 2 3 4 6 7

Check [Tree.crunch 1 | Tree.row 0]
 8

Check [Tree.crunch 1 | Tree.row 1]
 2 3 4 5 6 7

Check [Tree.crunch 2 | Tree.dfs]
 8 2 3 4 5 6 7

Check [Tree.crunch 2 | Tree.row 1]
 2 3 4 5 6 7

Shrink the tree with root 8 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 2

Shrink the tree with root 8 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 2

Shrink the tree with root 8 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 2

Shrink the tree with root 8 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
Minimum example found: 3

Shrink the tree with root 8 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
Minimum example found: 3

Shrink the tree with root 8 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
Minimum example found: 3

Shrink the tree with root 8 for predicate [fail if 9].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 8 for predicate [fail if 9].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 8 for predicate [fail if 9].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 8 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 8 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 8 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
No smaller example found

Tree generated with [Tree.binary_search ~min=2 ~initial=10]

Check [Tree.dfs]
 10 2 3 4 6 5 9 7 8

Check [Tree.row 1]
 2 3 4 6 9

Check [Tree.row 2]
 5 7 8

Check [Tree.row 3]


Check [Tree.crunch 0 | Tree.row 0]
 10

Check [Tree.crunch 0 | Tree.row 1]
 2 3 4 6 9

Check [Tree.crunch 1 | Tree.row 0]
 10

Check [Tree.crunch 1 | Tree.row 1]
 2 3 4 5 6 7 8 9

Check [Tree.crunch 2 | Tree.dfs]
 10 2 3 4 5 6 7 8 9

Check [Tree.crunch 2 | Tree.row 1]
 2 3 4 5 6 7 8 9

Shrink the tree with root 10 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 2

Shrink the tree with root 10 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 2

Shrink the tree with root 10 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 2

Shrink the tree with root 10 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
Minimum example found: 3

Shrink the tree with root 10 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
Minimum example found: 3

Shrink the tree with root 10 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
Minimum example found: 3

Shrink the tree with root 10 for predicate [fail if 9].
Shrinking strategy used: default
Minimum example found: 9

Shrink the tree with root 10 for predicate [fail if 9].
Shrinking strategy used: crunch 2
Minimum example found: 9

Shrink the tree with root 10 for predicate [fail if 9].
Shrinking strategy used: crunch 3
Minimum example found: 9

Shrink the tree with root 10 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 10 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 10 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
No smaller example found

Tree generated with [Tree.binary_search ~min=2 ~initial=21]

Check [Tree.dfs]
 21 2 3 4 6 5 10 7 8 9 18 11 12 13 15 14 17 16 20 19

Check [Tree.row 1]
 2 3 4 6 10 18 20

Check [Tree.row 2]
 5 7 8 9 11 12 13 15 17 19

Check [Tree.row 3]
 14 16

Check [Tree.crunch 0 | Tree.row 0]
 21

Check [Tree.crunch 0 | Tree.row 1]
 2 3 4 6 10 18 20

Check [Tree.crunch 1 | Tree.row 0]
 21

Check [Tree.crunch 1 | Tree.row 1]
 2 3 4 5 6 7 8 9 10 11 12 13 15 17 18 19 20

Check [Tree.crunch 2 | Tree.dfs]
 21 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20

Check [Tree.crunch 2 | Tree.row 1]
 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20

Shrink the tree with root 21 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 2

Shrink the tree with root 21 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 2

Shrink the tree with root 21 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 2

Shrink the tree with root 21 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
Minimum example found: 3

Shrink the tree with root 21 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
Minimum example found: 3

Shrink the tree with root 21 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
Minimum example found: 3

Shrink the tree with root 21 for predicate [fail if 9].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 21 for predicate [fail if 9].
Shrinking strategy used: crunch 2
Minimum example found: 9

Shrink the tree with root 21 for predicate [fail if 9].
Shrinking strategy used: crunch 3
Minimum example found: 9

Shrink the tree with root 21 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
Minimum example found: 11

Shrink the tree with root 21 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
Minimum example found: 11

Shrink the tree with root 21 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
Minimum example found: 11

Tree generated with [Tree.binary_search ~min=2 ~initial=51]

Check [Tree.dfs]
 51 2 3 4 6 5 10 7 8 9 18 11 12 13 15 14 17 16 34 19 20 21 23 22 27 24 25 26 33 28 29 30 32 31 50 35 36 37 39 38 43 40 41 42 49 44 45 46 48 47

Check [Tree.row 1]
 2 3 4 6 10 18 34 50

Check [Tree.row 2]
 5 7 8 9 11 12 13 15 17 19 20 21 23 27 33 35 36 37 39 43 49

Check [Tree.row 3]
 14 16 22 24 25 26 28 29 30 32 38 40 41 42 44 45 46 48

Check [Tree.crunch 0 | Tree.row 0]
 51

Check [Tree.crunch 0 | Tree.row 1]
 2 3 4 6 10 18 34 50

Check [Tree.crunch 1 | Tree.row 0]
 51

Check [Tree.crunch 1 | Tree.row 1]
 2 3 4 5 6 7 8 9 10 11 12 13 15 17 18 19 20 21 23 27 33 34 35 36 37 39 43 49 50

Check [Tree.crunch 2 | Tree.dfs]
 51 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 32 31 33 34 35 36 37 38 39 40 41 42 43 44 45 46 48 47 49 50

Check [Tree.crunch 2 | Tree.row 1]
 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 48 49 50

Shrink the tree with root 51 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 2

Shrink the tree with root 51 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 2

Shrink the tree with root 51 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 2

Shrink the tree with root 51 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
Minimum example found: 3

Shrink the tree with root 51 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
Minimum example found: 3

Shrink the tree with root 51 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
Minimum example found: 3

Shrink the tree with root 51 for predicate [fail if 9].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 51 for predicate [fail if 9].
Shrinking strategy used: crunch 2
Minimum example found: 9

Shrink the tree with root 51 for predicate [fail if 9].
Shrinking strategy used: crunch 3
Minimum example found: 9

Shrink the tree with root 51 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
Minimum example found: 11

Shrink the tree with root 51 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
Minimum example found: 11

Shrink the tree with root 51 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
Minimum example found: 11

Tree generated with [Tree.binary_search ~min=7 ~initial=8]

Check [Tree.dfs]
 8 7

Check [Tree.row 1]
 7

Check [Tree.row 2]


Check [Tree.row 3]


Check [Tree.crunch 0 | Tree.row 0]
 8

Check [Tree.crunch 0 | Tree.row 1]
 7

Check [Tree.crunch 1 | Tree.row 0]
 8

Check [Tree.crunch 1 | Tree.row 1]
 7

Check [Tree.crunch 2 | Tree.dfs]
 8 7

Check [Tree.crunch 2 | Tree.row 1]
 7

Shrink the tree with root 8 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 7

Shrink the tree with root 8 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 7

Shrink the tree with root 8 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 7

Shrink the tree with root 8 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 8 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 8 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 8 for predicate [fail if 9].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 8 for predicate [fail if 9].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 8 for predicate [fail if 9].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 8 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 8 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 8 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
No smaller example found

Tree generated with [Tree.binary_search ~min=7 ~initial=10]

Check [Tree.dfs]
 10 7 8 9

Check [Tree.row 1]
 7 8 9

Check [Tree.row 2]


Check [Tree.row 3]


Check [Tree.crunch 0 | Tree.row 0]
 10

Check [Tree.crunch 0 | Tree.row 1]
 7 8 9

Check [Tree.crunch 1 | Tree.row 0]
 10

Check [Tree.crunch 1 | Tree.row 1]
 7 8 9

Check [Tree.crunch 2 | Tree.dfs]
 10 7 8 9

Check [Tree.crunch 2 | Tree.row 1]
 7 8 9

Shrink the tree with root 10 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 7

Shrink the tree with root 10 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 7

Shrink the tree with root 10 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 7

Shrink the tree with root 10 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
Minimum example found: 9

Shrink the tree with root 10 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
Minimum example found: 9

Shrink the tree with root 10 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
Minimum example found: 9

Shrink the tree with root 10 for predicate [fail if 9].
Shrinking strategy used: default
Minimum example found: 9

Shrink the tree with root 10 for predicate [fail if 9].
Shrinking strategy used: crunch 2
Minimum example found: 9

Shrink the tree with root 10 for predicate [fail if 9].
Shrinking strategy used: crunch 3
Minimum example found: 9

Shrink the tree with root 10 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 10 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 10 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
No smaller example found

Tree generated with [Tree.binary_search ~min=7 ~initial=21]

Check [Tree.dfs]
 21 7 8 9 11 10 15 12 13 14 20 16 17 18 19

Check [Tree.row 1]
 7 8 9 11 15 20

Check [Tree.row 2]
 10 12 13 14 16 17 18 19

Check [Tree.row 3]


Check [Tree.crunch 0 | Tree.row 0]
 21

Check [Tree.crunch 0 | Tree.row 1]
 7 8 9 11 15 20

Check [Tree.crunch 1 | Tree.row 0]
 21

Check [Tree.crunch 1 | Tree.row 1]
 7 8 9 10 11 12 13 14 15 16 17 18 19 20

Check [Tree.crunch 2 | Tree.dfs]
 21 7 8 9 10 11 12 13 14 15 16 17 18 19 20

Check [Tree.crunch 2 | Tree.row 1]
 7 8 9 10 11 12 13 14 15 16 17 18 19 20

Shrink the tree with root 21 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 7

Shrink the tree with root 21 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 7

Shrink the tree with root 21 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 7

Shrink the tree with root 21 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
Minimum example found: 9

Shrink the tree with root 21 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
Minimum example found: 9

Shrink the tree with root 21 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
Minimum example found: 9

Shrink the tree with root 21 for predicate [fail if 9].
Shrinking strategy used: default
Minimum example found: 9

Shrink the tree with root 21 for predicate [fail if 9].
Shrinking strategy used: crunch 2
Minimum example found: 9

Shrink the tree with root 21 for predicate [fail if 9].
Shrinking strategy used: crunch 3
Minimum example found: 9

Shrink the tree with root 21 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
Minimum example found: 11

Shrink the tree with root 21 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
Minimum example found: 11

Shrink the tree with root 21 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
Minimum example found: 11

Tree generated with [Tree.binary_search ~min=7 ~initial=51]

Check [Tree.dfs]
 51 7 8 9 11 10 15 12 13 14 23 16 17 18 20 19 22 21 39 24 25 26 28 27 32 29 30 31 38 33 34 35 37 36 50 40 41 42 44 43 48 45 46 47 49

Check [Tree.row 1]
 7 8 9 11 15 23 39 50

Check [Tree.row 2]
 10 12 13 14 16 17 18 20 22 24 25 26 28 32 38 40 41 42 44 48 49

Check [Tree.row 3]
 19 21 27 29 30 31 33 34 35 37 43 45 46 47

Check [Tree.crunch 0 | Tree.row 0]
 51

Check [Tree.crunch 0 | Tree.row 1]
 7 8 9 11 15 23 39 50

Check [Tree.crunch 1 | Tree.row 0]
 51

Check [Tree.crunch 1 | Tree.row 1]
 7 8 9 10 11 12 13 14 15 16 17 18 20 22 23 24 25 26 28 32 38 39 40 41 42 44 48 49 50

Check [Tree.crunch 2 | Tree.dfs]
 51 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 36 38 39 40 41 42 43 44 45 46 47 48 49 50

Check [Tree.crunch 2 | Tree.row 1]
 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 42 43 44 45 46 47 48 49 50

Shrink the tree with root 51 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 7

Shrink the tree with root 51 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 7

Shrink the tree with root 51 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 7

Shrink the tree with root 51 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
Minimum example found: 9

Shrink the tree with root 51 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
Minimum example found: 9

Shrink the tree with root 51 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
Minimum example found: 9

Shrink the tree with root 51 for predicate [fail if 9].
Shrinking strategy used: default
Minimum example found: 9

Shrink the tree with root 51 for predicate [fail if 9].
Shrinking strategy used: crunch 2
Minimum example found: 9

Shrink the tree with root 51 for predicate [fail if 9].
Shrinking strategy used: crunch 3
Minimum example found: 9

Shrink the tree with root 51 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
Minimum example found: 11

Shrink the tree with root 51 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
Minimum example found: 11

Shrink the tree with root 51 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
Minimum example found: 11

Tree generated with [Tree.binary_search ~min=10 ~initial=10]

Check [Tree.dfs]
 10

Check [Tree.row 1]


Check [Tree.row 2]


Check [Tree.row 3]


Check [Tree.crunch 0 | Tree.row 0]
 10

Check [Tree.crunch 0 | Tree.row 1]


Check [Tree.crunch 1 | Tree.row 0]
 10

Check [Tree.crunch 1 | Tree.row 1]


Check [Tree.crunch 2 | Tree.dfs]
 10

Check [Tree.crunch 2 | Tree.row 1]


Shrink the tree with root 10 for predicate [always fail].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 10 for predicate [always fail].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 10 for predicate [always fail].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 10 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 10 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 10 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 10 for predicate [fail if 9].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 10 for predicate [fail if 9].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 10 for predicate [fail if 9].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 10 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 10 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 10 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
No smaller example found

Tree generated with [Tree.binary_search ~min=10 ~initial=21]

Check [Tree.dfs]
 21 10 11 12 14 13 18 15 16 17 20 19

Check [Tree.row 1]
 10 11 12 14 18 20

Check [Tree.row 2]
 13 15 16 17 19

Check [Tree.row 3]


Check [Tree.crunch 0 | Tree.row 0]
 21

Check [Tree.crunch 0 | Tree.row 1]
 10 11 12 14 18 20

Check [Tree.crunch 1 | Tree.row 0]
 21

Check [Tree.crunch 1 | Tree.row 1]
 10 11 12 13 14 15 16 17 18 19 20

Check [Tree.crunch 2 | Tree.dfs]
 21 10 11 12 13 14 15 16 17 18 19 20

Check [Tree.crunch 2 | Tree.row 1]
 10 11 12 13 14 15 16 17 18 19 20

Shrink the tree with root 21 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 10

Shrink the tree with root 21 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 10

Shrink the tree with root 21 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 10

Shrink the tree with root 21 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
Minimum example found: 12

Shrink the tree with root 21 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
Minimum example found: 12

Shrink the tree with root 21 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
Minimum example found: 12

Shrink the tree with root 21 for predicate [fail if 9].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 21 for predicate [fail if 9].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 21 for predicate [fail if 9].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 21 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
Minimum example found: 11

Shrink the tree with root 21 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
Minimum example found: 11

Shrink the tree with root 21 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
Minimum example found: 11

Tree generated with [Tree.binary_search ~min=10 ~initial=51]

Check [Tree.dfs]
 51 10 11 12 14 13 18 15 16 17 26 19 20 21 23 22 25 24 42 27 28 29 31 30 35 32 33 34 41 36 37 38 40 39 50 43 44 45 47 46 49 48

Check [Tree.row 1]
 10 11 12 14 18 26 42 50

Check [Tree.row 2]
 13 15 16 17 19 20 21 23 25 27 28 29 31 35 41 43 44 45 47 49

Check [Tree.row 3]
 22 24 30 32 33 34 36 37 38 40 46 48

Check [Tree.crunch 0 | Tree.row 0]
 51

Check [Tree.crunch 0 | Tree.row 1]
 10 11 12 14 18 26 42 50

Check [Tree.crunch 1 | Tree.row 0]
 51

Check [Tree.crunch 1 | Tree.row 1]
 10 11 12 13 14 15 16 17 18 19 20 21 23 25 26 27 28 29 31 35 41 42 43 44 45 47 49 50

Check [Tree.crunch 2 | Tree.dfs]
 51 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 40 39 41 42 43 44 45 46 47 48 49 50

Check [Tree.crunch 2 | Tree.row 1]
 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 40 41 42 43 44 45 46 47 48 49 50

Shrink the tree with root 51 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 10

Shrink the tree with root 51 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 10

Shrink the tree with root 51 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 10

Shrink the tree with root 51 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
Minimum example found: 12

Shrink the tree with root 51 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
Minimum example found: 12

Shrink the tree with root 51 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
Minimum example found: 12

Shrink the tree with root 51 for predicate [fail if 9].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 51 for predicate [fail if 9].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 51 for predicate [fail if 9].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 51 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
Minimum example found: 11

Shrink the tree with root 51 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
Minimum example found: 11

Shrink the tree with root 51 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
Minimum example found: 11

Tree generated with [Tree.binary_search ~min=25 ~initial=51]

Check [Tree.dfs]
 51 25 26 27 29 28 33 30 31 32 41 34 35 36 38 37 40 39 50 42 43 44 46 45 49 47 48

Check [Tree.row 1]
 25 26 27 29 33 41 50

Check [Tree.row 2]
 28 30 31 32 34 35 36 38 40 42 43 44 46 49

Check [Tree.row 3]
 37 39 45 47 48

Check [Tree.crunch 0 | Tree.row 0]
 51

Check [Tree.crunch 0 | Tree.row 1]
 25 26 27 29 33 41 50

Check [Tree.crunch 1 | Tree.row 0]
 51

Check [Tree.crunch 1 | Tree.row 1]
 25 26 27 28 29 30 31 32 33 34 35 36 38 40 41 42 43 44 46 49 50

Check [Tree.crunch 2 | Tree.dfs]
 51 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50

Check [Tree.crunch 2 | Tree.row 1]
 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50

Shrink the tree with root 51 for predicate [always fail].
Shrinking strategy used: default
Minimum example found: 25

Shrink the tree with root 51 for predicate [always fail].
Shrinking strategy used: crunch 2
Minimum example found: 25

Shrink the tree with root 51 for predicate [always fail].
Shrinking strategy used: crunch 3
Minimum example found: 25

Shrink the tree with root 51 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: default
Minimum example found: 27

Shrink the tree with root 51 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 2
Minimum example found: 27

Shrink the tree with root 51 for predicate [fail_if_not_null_and_multiple_of_3].
Shrinking strategy used: crunch 3
Minimum example found: 27

Shrink the tree with root 51 for predicate [fail if 9].
Shrinking strategy used: default
No smaller example found

Shrink the tree with root 51 for predicate [fail if 9].
Shrinking strategy used: crunch 2
No smaller example found

Shrink the tree with root 51 for predicate [fail if 9].
Shrinking strategy used: crunch 3
No smaller example found

Shrink the tree with root 51 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: default
Minimum example found: 25

Shrink the tree with root 51 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 2
Minimum example found: 25

Shrink the tree with root 51 for predicate [fail if greater than 10 and not power of 2].
Shrinking strategy used: crunch 3
Minimum example found: 25

